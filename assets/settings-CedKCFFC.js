import{C as $,i as F,c as p}from"./index-BctrSnLS.js";const y={compact:{name:"compact",label:"compact",description:"compact",dimensions:{width:400,height:300},maxCards:1,defaultCards:["elo","recentStreak","sessionStats","winrate","kd","winStreak","performance","multiKill","mapPerformance","performanceTrend","entryFragging","mvpAssist","recentMatches","maps"]},medium:{name:"medium",label:"medium",description:"medium",dimensions:{width:600,height:800},maxCards:2,defaultCards:["elo","winrate","kd","recentStreak","winStreak","performance","sessionStats","multiKill","mapPerformance","performanceTrend","entryFragging","mvpAssist","recentMatches","maps"]},full:{name:"full",label:"full",description:"full",dimensions:{width:800,height:1e3},maxCards:4,defaultCards:["elo","winrate","kd","recentMatches","performance","recentStreak","winStreak","maps","sessionStats","multiKill","mapPerformance","performanceTrend","entryFragging","mvpAssist"]}},n={nickname:"",size:"medium",opacity:100,liveMatch:{enabled:!0,opacity:100,autoHide:!1,autoHideDelay:60,showDuration:15,hideDuration:45},cards:[{id:"1",type:"elo",enabled:!0,order:0,duration:10},{id:"2",type:"winrate",enabled:!0,order:1,duration:10},{id:"3",type:"kd",enabled:!0,order:2,duration:10},{id:"4",type:"recentStreak",enabled:!0,order:3,duration:10},{id:"7",type:"recentMatches",enabled:!1,order:4,duration:10},{id:"9",type:"winStreak",enabled:!1,order:5,duration:10},{id:"10",type:"performance",enabled:!1,order:6,duration:10},{id:"11",type:"maps",enabled:!1,order:7,duration:10},{id:"12",type:"multiKill",enabled:!1,order:8,duration:10},{id:"13",type:"mapPerformance",enabled:!1,order:9,duration:10},{id:"14",type:"performanceTrend",enabled:!1,order:10,duration:10},{id:"15",type:"entryFragging",enabled:!1,order:11,duration:10},{id:"16",type:"mvpAssist",enabled:!1,order:12,duration:10},{id:"17",type:"sessionStats",enabled:!1,order:13,duration:10}],rotation:{enabled:!0,interval:10,transition:"fade"},animations:{fadeIn:!0,slideIn:!0}},z=$("settings",()=>{const e=F({...n,cards:n.cards.map(i=>({...i})),rotation:{...n.rotation},animations:{...n.animations},liveMatch:{...n.liveMatch}}),S=p(()=>y[e.value.size]),m=p(()=>!e.value.cards||!Array.isArray(e.value.cards)?[]:e.value.cards.filter(i=>i.enabled).sort((i,a)=>i.order-a.order)),w=p(()=>{const i="/FaceIT-Pulse/".replace(/\/$/,""),a=window.location.origin+i+"/#/overlay",t=new URLSearchParams;e.value.nickname&&t.append("nickname",e.value.nickname),e.value.size!=="medium"&&t.append("size",e.value.size);const o=m.value.map(d=>d.type).join(",");o&&t.append("cards",o),e.value.rotation.enabled&&(t.append("rotation","true"),t.append("interval",e.value.rotation.interval.toString()),t.append("transition",e.value.rotation.transition));const l=Object.entries(e.value.animations).filter(([d,u])=>u).map(([d])=>d);return l.length>0&&t.append("animations",l.join(",")),e.value.opacity!==100&&t.append("opacity",e.value.opacity.toString()),`${a}?${t.toString()}`}),M=p(()=>{var o,l,d,u;const i="/FaceIT-Pulse/".replace(/\/$/,""),a=window.location.origin+i+"/#/live-match",t=new URLSearchParams;return e.value.nickname&&t.append("nickname",e.value.nickname),((o=e.value.liveMatch)==null?void 0:o.opacity)!==void 0&&e.value.liveMatch.opacity!==100&&t.append("opacity",e.value.liveMatch.opacity.toString()),((l=e.value.liveMatch)==null?void 0:l.showDuration)!==void 0&&e.value.liveMatch.showDuration!==15&&t.append("showDuration",e.value.liveMatch.showDuration.toString()),((d=e.value.liveMatch)==null?void 0:d.hideDuration)!==void 0&&e.value.liveMatch.hideDuration!==45&&t.append("hideDuration",e.value.liveMatch.hideDuration.toString()),(u=e.value.liveMatch)!=null&&u.autoHide&&(t.append("autoHide","true"),e.value.liveMatch.autoHideDelay!==void 0&&t.append("autoHideDelay",e.value.liveMatch.autoHideDelay.toString())),`${a}?${t.toString()}`});function b(){let i=window.location.search;window.location.hash.includes("?")&&(i=window.location.hash.split("?")[1]);const a=new URLSearchParams(i),t=a.get("nickname");t&&(e.value.nickname=t);const o=a.get("size");o&&["compact","medium","full"].includes(o)&&(e.value.size=o);const l=a.get("cards");if(l){const r=l.split(",").filter(s=>!h.includes(s));r.length>0&&(e.value.cards=r.map((s,v)=>({id:`${v+1}`,type:s,enabled:!0,order:v,duration:10})))}if(a.get("rotation")==="true"){e.value.rotation.enabled=!0;const r=a.get("interval");r&&(e.value.rotation.interval=parseInt(r));const s=a.get("transition");s&&(e.value.rotation.transition=s)}const u=a.get("animations");if(u){const r=u.split(",");e.value.animations={fadeIn:r.includes("fadeIn"),slideIn:r.includes("slideIn")}}const g=a.get("opacity");if(g){const r=parseInt(g);r>=0&&r<=100&&(e.value.opacity=r,window.location.pathname==="/live-match"&&(e.value.liveMatch.opacity=r))}if(window.location.pathname==="/live-match"){e.value.liveMatch||(e.value.liveMatch={...n.liveMatch});const r=a.get("showDuration");if(r){const c=parseInt(r);c>=5&&(e.value.liveMatch.showDuration=c)}const s=a.get("hideDuration");if(s){const c=parseInt(s);c>=5&&(e.value.liveMatch.hideDuration=c)}if(a.get("autoHide")==="true"){e.value.liveMatch.autoHide=!0;const c=a.get("autoHideDelay");c&&(e.value.liveMatch.autoHideDelay=parseInt(c))}}}function D(i){e.value={...e.value,...i}}function k(){e.value={...n,cards:n.cards.map(i=>({...i})),rotation:{...n.rotation},animations:{...n.animations},liveMatch:{...n.liveMatch}}}function f(){localStorage.setItem("overlay-settings",JSON.stringify(e.value))}const h=["avgKills","avgDeaths","eloDiff"];function C(){const i=localStorage.getItem("overlay-settings");if(i)try{const a=JSON.parse(i);let t=Array.isArray(a.cards)&&a.cards.length>0?a.cards.filter(o=>!h.includes(o.type)):n.cards;t.length===0&&(t=n.cards),e.value={...n,...a,cards:t,rotation:a.rotation||n.rotation,animations:a.animations||n.animations,liveMatch:{...n.liveMatch,...a.liveMatch}},a.cards&&a.cards.length!==t.length&&(console.log(`Migrated settings: removed ${a.cards.length-t.length} deprecated card(s)`),f())}catch(a){console.error("Failed to parse saved settings:",a),e.value={...n}}else e.value={...n}}function I(i){const a=y[i];e.value.size=i,e.value.cards=a.defaultCards.map((t,o)=>({id:`${Date.now()}-${o}`,type:t,enabled:!0,order:o,duration:10}))}function P(i){e.value.cards=i.map((a,t)=>({...a,order:t}))}function H(i){const a={id:`${Date.now()}`,type:i,enabled:!0,order:e.value.cards.length,duration:10};e.value.cards.push(a)}function T(i){e.value.cards=e.value.cards.filter(a=>a.id!==i)}function A(i){const a=e.value.cards.find(t=>t.id===i);a&&(a.enabled=!a.enabled)}return{settings:e,currentPreset:S,activeCards:m,overlayUrl:w,liveMatchUrl:M,loadFromUrl:b,updateSettings:D,resetSettings:k,saveToStorage:f,loadFromStorage:C,applyPreset:I,reorderCards:P,addCard:H,removeCard:T,toggleCard:A}});export{y as S,z as u};
